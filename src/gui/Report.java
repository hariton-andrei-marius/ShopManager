package gui;

/**
 *
 * @author Hariton AndreiMarius
 */
public class Report extends javax.swing.JFrame {
    // The manager
    private Manager manager;
    // Default action
    private String action;
    
    /**
     * Creates new form Report
     */
    public Report() {
        initComponents();
        action="";
    }

    /**
     * Setter for manager
     * @param manager The manager
     */
    public void setManager(Manager manager) {
        this.manager = manager;
    }
    
    /**
     * Setter for action
     * @param action The action
     */
    public void setAction(String action) {
        this.action = action;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actions = new javax.swing.JComboBox<>();
        fileName = new javax.swing.JTextField();
        confirmButton = new javax.swing.JButton();
        fileExtension = new javax.swing.JTextField();
        notify = new javax.swing.JLabel();
        informations = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Report actions");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        actions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Export to Text file", "Export to JSON file", "Export to HTML file", "Import from JSON file", "Backup of JSON file" }));
        actions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                actionsItemStateChanged(evt);
            }
        });

        fileName.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        confirmButton.setBackground(new java.awt.Color(0, 102, 51));
        confirmButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmButton.setText("Confirm");
        confirmButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        fileExtension.setEditable(false);
        fileExtension.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        notify.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        notify.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notify.setText("Choose the action you want to do.");

        informations.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        informations.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        informations.setText("The exported file will be saved into the same folder of this program.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(confirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(informations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(notify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileExtension)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(informations)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileExtension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if(action.equals("ExportTXT")) {        // EXPORT TEXT
            actions.setSelectedIndex(0);
            fileExtension.setText(".txt");
            notify.setText("Choose the filename and confirm.");
        } else if(action.equals("ExportJSON")) {// EXPORT JSON
            actions.setSelectedIndex(1);
            fileExtension.setText(".json");
            notify.setText("Choose the filename and confirm.");
        } else if(action.equals("ExportHTML")) {// EXPORT HTML
            actions.setSelectedIndex(2);
            fileExtension.setText(".html");
            notify.setText("Choose the filename and confirm.");
        } else if(action.equals("ImportJSON")) {// IMPORT JSON
            actions.setSelectedIndex(3);
            fileExtension.setText(".json");
            notify.setText("Choose the filename and confirm.");
        } else if(action.equals("BackupJSON")) {// BACKUP EXPORTED JSON
            actions.setSelectedIndex(4);
            fileExtension.setText(".backup.json");
            notify.setText("The filename must be the same of the exported JSON.");
        } else if(action.equals("DefaultHTML")) {// DEFAULT HTML
            actions.setSelectedIndex(2);
            fileExtension.setText(".html");
            notify.setText("Choose the action you want to do.");
        }
        fileName.setText(manager.getFilename());
    }//GEN-LAST:event_formWindowOpened

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        manager.setFilename(fileName.getText());
        switch (actions.getSelectedIndex()) {
            case 0: // EXPORT TEXT
                manager.exportToText();
                break;
            case 1: // EXPORT JSON
                manager.exportToJson();
                break;
            case 2: // EXPORT HTML
                manager.exportToHtml();
                break;
            case 3: // IMPORT JSON
                manager.importFromJson();
                break;
            case 4: // BACKUP JSON FILE EXPORTED
                manager.backupOfJson();
                break;
            default:
                break;
        }
        this.dispose();
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void actionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_actionsItemStateChanged
        switch (actions.getSelectedIndex()) {
            case 0: // EXPORT TEXT
                fileExtension.setText(".txt");
                notify.setText("Choose the filename and confirm.");
                break;
            case 1: // EXPORT JSON
                fileExtension.setText(".json");
                notify.setText("Choose the filename and confirm.");
                break;
            case 2: // EXPORT HTML
                fileExtension.setText(".html");
                notify.setText("Choose the filename and confirm.");
                break;
            case 3: // IMPORT JSON
                fileExtension.setText(".json");
                notify.setText("Choose the filename and confirm.");
                break;
            case 4: // BACKUP JSON FILE EXPORTED
                fileExtension.setText(".backup.json");
                notify.setText("The filename must be the same of the exported JSON.");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_actionsItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> actions;
    private javax.swing.JButton confirmButton;
    private javax.swing.JTextField fileExtension;
    private javax.swing.JTextField fileName;
    private javax.swing.JLabel informations;
    private javax.swing.JLabel notify;
    // End of variables declaration//GEN-END:variables
}
